name: Terraform Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_CLOUD_ORGANIZATION: "chrisnieves60"
  TF_WORKSPACE: "aws-terraform-ci-cd-2"
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8

      - name: Trigger Terraform Run
        run: |
          WORKSPACE_ID=$(curl -s \
            -H "Authorization: Bearer $TF_API_TOKEN" \
            -H "Content-Type: application/vnd.api+json" \
            https://app.terraform.io/api/v2/organizations/$TF_CLOUD_ORGANIZATION/workspaces/$TF_WORKSPACE | jq -r '.data.id')

          curl -X POST \
          -H "Authorization: Bearer $TF_API_TOKEN" \
          -H "Content-Type: application/vnd.api+json" \
          -d '{
            "data": {
              "attributes": {
                "message": "Triggered by GitHub Actions",
                "auto-apply": true
                "refresh": true
              },
              "type": "runs",
              "relationships": {
                "workspace": {
                  "data": {
                    "type": "workspaces",
                    "id": "'"$WORKSPACE_ID"'"
                  }
                }
              }
            }
          }' \
          https://app.terraform.io/api/v2/runs
